<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:ietf:params:xml:ns:yang:yin:1" xmlns:tlss="urn:ietf:params:xml:ns:yang:ietf-tls-server" xmlns:tlscmn="urn:ietf:params:xml:ns:yang:ietf-tls-common" xmlns:ks="urn:ietf:params:xml:ns:yang:ietf-keystore" xmlns:inet="urn:ietf:params:xml:ns:yang:ietf-inet-types" name="ietf-tls-server">
  <yang-version value="1"/>
  <namespace uri="urn:ietf:params:xml:ns:yang:ietf-tls-server"/>
  <prefix value="tlss"/>
  <import module="ietf-tls-common">
    <prefix value="tlscmn"/>
    <revision-date date="2017-10-30"/>
  </import>
  <import module="ietf-keystore">
    <prefix value="ks"/>
  </import>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <organization>
    <text>IETF NETCONF (Network Configuration) Working Group</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;http://tools.ietf.org/wg/netconf/&gt;
WG List:  &lt;mailto:netconf@ietf.org&gt;

Author:   Kent Watsen
          &lt;mailto:kwatsen@juniper.net&gt;

Author:   Gary Wu
          &lt;mailto:garywu@cisco.com&gt;</text>
  </contact>
  <description>
    <text>This module defines a reusable grouping for a TLS server that
can be used as a basis for specific TLS server instances.

Copyright (c) 2017 IETF Trust and the persons identified as
authors of the code. All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, is permitted pursuant to, and subject
to the license terms contained in, the Simplified BSD
License set forth in Section 4.c of the IETF Trust's
Legal Provisions Relating to IETF Documents
(http://trustee.ietf.org/license-info).

This version of this YANG module is part of RFC XXXX; see
the RFC itself for full legal notices.</text>
  </description>
  <revision date="2017-10-30">
    <description>
      <text>Initial version</text>
    </description>
    <reference>
      <text>RFC XXXX: YANG Groupings for TLS Clients and TLS Servers</text>
    </reference>
  </revision>
  <feature name="tls-server-hello-params-config">
    <description>
      <text>TLS hello message parameters are configurable on a TLS
server.</text>
    </description>
  </feature>
  <container name="ietf-tls-server">
    <container name="connection-info">
      <leaf name="server-port">
        <type name="inet:port-number"/>
        <description>
          <text>Port where server will run.</text>
        </description>
      </leaf>
      <leaf name="auto-start">
        <type name="boolean"/>
        <description>
          <text>If true, the server will start immediately.</text>
        </description>
      </leaf>
    </container>
    <container name="server-identity">
      <description>
        <text>The list of certificates the TLS server will present when
establishing a TLS connection in its Certificate message,
as defined in Section 7.4.2 in RFC 5246.</text>
      </description>
      <reference>
        <text>RFC 5246:
  The Transport Layer Security (TLS) Protocol Version 1.2</text>
      </reference>
      <uses name="ks:private-key-grouping"/>
      <uses name="ks:certificate-grouping"/>
    </container>
    <container name="client-auth">
      <description>
        <text>A reference to a list of pinned certificate authority (CA)
certificates and a reference to a list of pinned client
certificates.</text>
      </description>
      <container name="pinned-ca-certs">
        <uses name="ks:certificate-grouping"/>
        <description>
          <text>A reference to a list of certificate authority (CA)
certificates used by the TLS server to authenticate
TLS client certificates.  A client certificate is
authenticated if it has a valid chain of trust to
a configured pinned CA certificate.</text>
        </description>
      </container>
      <container name="pinned-client-certs">
        <uses name="ks:certificate-grouping"/>
        <description>
          <text>A reference to a list of client certificates used by
the TLS server to authenticate TLS client certificates.
A clients certificate is authenticated if it is an
exact match to a configured pinned client certificate.</text>
        </description>
      </container>
    </container>
    <container name="hello-params">
      <uses name="tlscmn:hello-params-grouping"/>
      <description>
        <text>Configurable parameters for the TLS hello message.</text>
      </description>
    </container>
  </container>
  <rpc name="init_ssl_server">
    <input>
      <leaf name="id">
        <type name="uint8"/>
        <description>
          <text>SSL configuration to load and run</text>
        </description>
      </leaf>
    </input>
  </rpc>
</module>
